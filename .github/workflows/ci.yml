name: CI - Test Runner

# Run the workflow when commits are pushed on main or when a PR is modified
on:
  push:
    branches:
      - main
      - ci/**

  pull_request:
    types:
      - opened
      - synchronize
      - reopened

jobs:
  build-and-test:

    name: Build, Test & Sonar
    runs-on: ubuntu-latest
    steps:
      # First step: Checkout the repository on the runner
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      # Kernel-based Virtual Machine (KVM) is built into Linux. Enabling it allows the Android emulator to run faster.
      - name: Enable KVM group perms
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      # Setup JDK 17
      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      # Setup NodeJS
      - name: Setup NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: 22

      # Setup Firebase CLI
      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      # Cache Firebase CLI installation
      - name: Cache Firebase CLI
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: firebase-tools-cache

      # Add Firebase CLI to PATH
      - name: Set Firebase path
        run: echo "${HOME}/.npm-global/bin" >> $GITHUB_PATH

      # Restore Gradle cache
      - name: Restore Gradle cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}

      # Make gradlew executable
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      # Load google-services.json from secrets
      - name: Decode secrets
        env:
          GOOGLE_SERVICES: ${{ secrets.GOOGLE_SERVICES }}
        run: |
          if [ -n "$GOOGLE_SERVICES" ]; then
            echo "$GOOGLE_SERVICES" | base64 --decode > ./app/google-services.json
          else
            echo "::warning::GOOGLE_SERVICES secret is not set."
          fi

      # Cache the Emulator
      - name: AVD cache
        id: avd-cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-34

      # Create AVD if cache missed
      - name: Create AVD snapshot
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 34
          target: google_apis
          arch: x86_64
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: false
          script: echo "Generated AVD snapshot for caching."

      # ------------------------------------------------------------------------------------------------
      # Everything from now runs using the same Gradle Daemon

      # KTFmt Check
      - name: KTFmt Check
        run: ./gradlew ktfmtCheck --parallel --build-cache

      # Assemble project
      - name: Assemble project
        run: ./gradlew assemble lint --parallel --build-cache

      # Unit Tests
      - name: Run Unit Tests
        run: ./gradlew check --parallel --build-cache

      # Start Firebase emulators
      - name: Start Firebase emulators
        run: |
          if [ -e "firebase.json" ] && jq -e '.emulators' firebase.json >/dev/null; then
            echo "Starting Firebase emulators..."
            firebase emulators:start --only auth,firestore --project demo-project &
          else
            echo "Firebase emulators not configured, skipping startup..."
          fi

      # UI tests on emulator
      - name: Run UI tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 34
          target: google_apis
          arch: x86_64
          force-avd-creation: false
          profile: pixel_6
          emulator-options: >
            -no-snapshot
            -no-window
            -gpu swiftshader_indirect
            -no-audio
            -no-boot-anim
          disable-animations: false
          script: ./gradlew connectedCheck --parallel --build-cache

      # Coverage & Sonar
      - name: Generate Coverage Report
        run: ./gradlew jacocoTestReport --parallel --build-cache

      - name: Upload to SonarCloud
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew sonar --parallel --build-cache
