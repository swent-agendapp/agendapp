[versions]
coroutinesTest = "1.7.3"
agp = "8.4.2"
kotlin = "1.9.0"
coreKtx = "1.12.0"
ktfmt = "0.17.0"
junit = "4.13.2"
mockitoAndroid = "5.13.0"
mockitoCore = "5.13.0"
mockitoKotlin = "5.4.0"
mockk = "1.13.7"
junitVersion = "1.1.5"
espressoCore = "3.5.1"
appcompat = "1.6.1"
material = "1.11.0"
composeBom = "2024.02.02"
composeActivity = "1.8.2"
composeViewModel = "2.7.0"
lifecycleRuntimeKtx = "2.7.0"
kaspresso = "1.5.5"
robolectric = "4.11.1"
sonar = "4.4.1.3373"
gms = "4.4.2"
navigation = "2.8.0"
composeUiTest = "1.7.5"         # align with your Compose version
truth = "1.4.2"

# Firebase Libraries
firebaseAuth = "23.0.0"
firebaseAuthKtx = "23.0.0"
firebaseDatabaseKtx = "21.0.0"
firebaseFirestore = "25.1.0"

# Networking
okhttp = "4.12.0"
googleid = "1.1.1"

#Testing UI
mockkAgent = "1.13.7"
mockkAndroid = "1.13.7"

#material3
compose-m3 = "1.3.1"
compose-icons = "1.5.0"

# Google Service and Maps
playServicesMaps = "19.0.0"
mapsCompose = "4.3.3"
mapsComposeUtils = "4.3.0"
roomCompiler = "2.8.2"

[libraries]

kotlinx_coroutines_test = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-test", version.ref = "coroutinesTest" }

# Firebase Libraries
firebase-auth = { module = "com.google.firebase:firebase-auth", version.ref = "firebaseAuth" }
firebase-auth-ktx = { module = "com.google.firebase:firebase-auth-ktx", version.ref = "firebaseAuthKtx" }
firebase-database-ktx = { module = "com.google.firebase:firebase-database-ktx", version.ref = "firebaseDatabaseKtx" }
firebase-firestore = { module = "com.google.firebase:firebase-firestore", version.ref = "firebaseFirestore" }

androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "coreKtx" }
junit = { group = "junit", name = "junit", version.ref = "junit" }
androidx-junit = { group = "androidx.test.ext", name = "junit", version.ref = "junitVersion" }
androidx-espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "espressoCore" }
androidx-espresso-intents = { group = "androidx.test.espresso", name = "espresso-intents", version.ref = "espressoCore" }
androidx-appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "appcompat" }
material = { group = "com.google.android.material", name = "material", version.ref = "material" }
androidx-lifecycle-runtime-ktx = { group = "androidx.lifecycle", name = "lifecycle-runtime-ktx", version.ref = "lifecycleRuntimeKtx" }

compose-bom = { group = "androidx.compose", name = "compose-bom", version.ref = "composeBom" }
compose-material3 = { group = "androidx.compose.material3", name = "material3" }
compose-ui = { group = "androidx.compose.ui", name = "ui" }
compose-ui-graphics = { group = "androidx.compose.ui", name = "ui-graphics" }
compose-preview = { group = "androidx.compose.ui", name = "ui-tooling-preview" }
compose-tooling = { group = "androidx.compose.ui", name = "ui-tooling" }
compose-activity = { group = "androidx.activity", name = "activity-compose", version.ref = "composeActivity" }
compose-viewmodel = { group = "androidx.lifecycle", name = "lifecycle-viewmodel-compose", version.ref = "composeViewModel" }
compose-test-junit = { group = "androidx.compose.ui", name = "ui-test-junit4" }
compose-test-manifest = { group = "androidx.compose.ui", name = "ui-test-manifest" }

kaspresso = { group = "com.kaspersky.android-components", name = "kaspresso", version.ref = "kaspresso" }
kaspresso-compose = { group = "com.kaspersky.android-components", name = "kaspresso-compose-support", version.ref = "kaspresso" }

mockito-kotlin = { module = "org.mockito.kotlin:mockito-kotlin" , version.ref="mockitoKotlin"}
mockito-android = { module = "org.mockito:mockito-android", version.ref = "mockitoAndroid" }
mockito-core = { module = "org.mockito:mockito-core", version.ref = "mockitoCore" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
mockk-agent = { module = "io.mockk:mockk-agent", version.ref = "mockkAgent" }
mockk-android = { module = "io.mockk:mockk-android", version.ref = "mockkAndroid" }

robolectric = { module = "org.robolectric:robolectric", version.ref = "robolectric" }

okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
androidx-compose-material3 = { module = "androidx.compose.material3:material3", version.ref = "compose-m3" }
androidx-compose-icons-core = { module = "androidx.compose.material:material-icons-core", version.ref = "compose-icons" }
androidx-compose-icons-extended = { module = "androidx.compose.material:material-icons-extended", version.ref = "compose-icons" }
googleid = { group = "com.google.android.libraries.identity.googleid", name = "googleid", version.ref = "googleid" }

androidx-navigation-compose = { module = "androidx.navigation:navigation-compose", version.ref = "navigation" }
androidx-navigation-testing = { module = "androidx.navigation:navigation-testing", version.ref = "navigation" }

androidx-compose-ui-test-junit4 = { module = "androidx.compose.ui:ui-test-junit4", version.ref = "composeUiTest" }
androidx-compose-ui-test-manifest = { module = "androidx.compose.ui:ui-test-manifest", version.ref = "composeUiTest" }

google-truth = { module = "com.google.truth:truth", version.ref = "truth" }

maps-compose = { module = "com.google.maps.android:maps-compose", version.ref = "mapsCompose" }
maps-compose-utils = { module = "com.google.maps.android:maps-compose-utils", version.ref = "mapsComposeUtils" }
play-services-maps = { module = "com.google.android.gms:play-services-maps", version.ref = "playServicesMaps" }
androidx-room-compiler = { group = "androidx.room", name = "room-compiler", version.ref = "roomCompiler" }

[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
jetbrainsKotlinAndroid = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
ktfmt = { id = "com.ncorti.ktfmt.gradle", version.ref = "ktfmt" }
sonar = { id = "org.sonarqube", version.ref = "sonar" }
gms = { id = "com.google.gms.google-services", version.ref = "gms" }
